spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
          keycloak:
            client-id: ${KEYCLOAK_CLIENT_ID}
            client-secret: ${KEYCLOAK_CLIENT_SECRET}
            client-name: "VSCP Keycloak test client"
            provider: "keycloak"
            scope: "openid,profile,email"
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-authentication-method: "client_secret_basic"
            authorization-grant-type: "authorization_code"

        provider:
          keycloak:
            base-uri: "${KEYCLOAK_SERVER}/realms/${KEYCLOAK_REALM}"
            authorization-uri: "${spring.security.oauth2.client.provider.keycloak.base-uri}/protocol/openid-connect/auth"
            token-uri: "${spring.security.oauth2.client.provider.keycloak.base-uri}/protocol/openid-connect/token"
            user-info-uri: "${spring.security.oauth2.client.provider.keycloak.base-uri}/protocol/openid-connect/userinfo"
            user-info-authentication-method: "body"
            jwk-set-uri: "${spring.security.oauth2.client.provider.keycloak.base-uri}/protocol/openid-connect/certs"
            user-name-attribute: "name"
      resourceserver:
        jwt:
          issuer-uri: ${spring.security.oauth2.client.provider.keycloak.base-uri}
          jwk-set-uri: ${spring.security.oauth2.client.provider.keycloak.base-uri}/protocol/openid-connect/certs